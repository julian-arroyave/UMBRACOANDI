@inherits umbraco.MacroEngines.DynamicNodeContext
@using umbraco.MacroEngines;
@{    
    var contentSliders = CurrentModel.XPath("ancestor-or-self::Home//ContainerSlider").Items[0];
        
    if(contentSliders != null && contentSliders.ChildrenAsList.Count() > 0)
    {
    var sliders = contentSliders.ChildrenAsList.ToList();
    <div id="slider">
    
  <div id="buttons-slider-top">
	<div class="button-down"></div>
	<div class="button-up"></div>
	</div>
        <div id="buttom-slider-ppal">
                <ul>
                        <li class="ico-slider-ppal active" idslider="0"></li>
		            @for (int i = 1; i < sliders.Count; i++)
              {
                            <li class="ico-slider-ppal" idslider="@i"></li>
              }		
                </ul>
        </div>
        
        <div class="slider-ppal" target="_blank" idslider="0"> <div  href="@sliders[0].GetPropertyValue("urlToRedirect")" class="link-contenedor-blank text-slider">@Html.Raw(@sliders[0].GetPropertyValue("content"))</div> <img class="item-slider" src="@MediaHelper.GetFile(sliders[0].GetPropertyValue("image"))" alt=""/></div>
		@for (int i = 1; i < sliders.Count; i++)
  {     
        <div class="slider-ppal" target="_blank" idslider="@i" style="display:none;"><div  href="@sliders[i].GetPropertyValue("urlToRedirect")" class="link-contenedor-blank  text-slider">@Html.Raw(@sliders[i].GetPropertyValue("content"))</div><img class="item-slider" src="@MediaHelper.GetFile(sliders[i].GetPropertyValue("image"))" alt=""/>
		
		
		</div>
  }		

    </div>
  	
    }
}
